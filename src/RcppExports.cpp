// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// loglikelihood_cpp
double loglikelihood_cpp(double k, double r, const IntegerMatrix& Ys, const NumericMatrix& f, const NumericVector& gendist, double epsilon, double rho);
RcppExport SEXP _paneljudge_loglikelihood_cpp(SEXP kSEXP, SEXP rSEXP, SEXP YsSEXP, SEXP fSEXP, SEXP gendistSEXP, SEXP epsilonSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type Ys(YsSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gendist(gendistSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(loglikelihood_cpp(k, r, Ys, f, gendist, epsilon, rho));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_paneljudge_loglikelihood_cpp", (DL_FUNC) &_paneljudge_loglikelihood_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_paneljudge(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
